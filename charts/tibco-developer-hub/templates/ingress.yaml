# Copyright Â© 2023. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.

{{- $fullName := include "common.names.fullname" . -}}
{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: backstage
    {{- include "tibcohub.platform.commonLabels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Release.Namespace }}-{{ $fullName }}-auth-errors@kubernetescrd,{{ .Release.Namespace }}-{{ $fullName }}-auth@kubernetescrd
    external-dns.alpha.kubernetes.io/target: {{ .Values.ingress.host }}
    {{- if .Values.ingress.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.ingress.annotations "context" $) | nindent 4 }}
    {{- end }}
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className | quote }}
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
    - hosts:
      - {{ .Values.ingress.host }}
      secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: {{ .Values.ingress.pathPrefix }} 
            pathType: Prefix
            backend:
              service:
                name: {{ include "common.names.fullname" . }}
                port:
                  number: {{ .Values.service.ports.backend }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ $fullName }}-auth
spec:
  forwardAuth:
    address: https://{{ .Values.ingress.host }}{{ .Values.ingress.pathPrefix }}/oauth2
    trustForwardHeader: true
    authResponseHeaders:
      - X-Auth-Request-User
      - X-Auth-Request-Email
      - X-Forwarded-Access-Token
      - X-Auth-Request-Access-Token
      - X-Atmosphere-Token
      - Authorization
    tls:
      insecureSkipVerify: true
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ $fullName }}-auth-errors
spec:
  errors:
    query: >-
      https://{{ .Values.ingress.host }}{{ .Values.ingress.pathPrefix }}/oauth2/sign_out?rd=https://{{ .Values.ingress.host }}{url}
    service:
      name: oauth2-proxy-{{ $.Values.global.cp.instanceId }}
      port: 80
    status:
      - '401'
{{- end }}
